;;;; cl-tesseract.lisp

(in-package #:cl-tesseract)

;;; "cl-tesseract" goes here. Hacks and glory await!

(defun tesseract-version ()
  "Returns Tesseract version as string."
  (tessversion))

#| On SBCL, libtesseract 3.04.00 signals a SIGFPE while carrying out text recognition. While 
this has no effect using CCL, it requires the use of a SBCL-specific macro on that 
implementation invoking SB-INT:WITH-FLOAT-TRAPS-MASKED. Under SBCL, all calls to libtesseract 
that carry out character recognition (process-pages, tessbaseapigetutf8text, etc.) must be 
executed with the :DIVIDE-BY-ZERO flag masked. |#

(defmacro mask-sigfpe (&body body)
  "Under SBCL, this macro wraps body with SB-INT:WITH-FLOAT-TRAPS-MASKED to prevent a SIGFPE 
generated by libtesseract from causing a non-recoverable error. On other implementations, 
simply wraps body in a PROGN."
  #+sbcl
  `(sb-int:with-float-traps-masked (:divide-by-zero)
    ,@body)
  #-sbcl
  `(progn ,@body))

(defmacro with-base-api (api-name &body body &aux (handle (gensym)))
  "This macro creates a TessBaseAPI using TessBaseAPICreate and binds it to api-name. It 
wraps body with an UNWIND-PROTECT form to ensure that TessBaseAPIEnd and TessBaseAPIDelete 
are called on api-name upon exit."
  `(let (,handle)
     (unwind-protect
         (let ((,api-name (setq ,handle (tessbaseapicreate))))
           ,@body)
       (tessbaseapiend ,handle)
       (tessbaseapidelete ,handle))))

(defun init-tess-api (api lang)
  "Calls TessBaseAPIInit3 on api and sets lang, which should be a string naming a 
.traineddata file in *tessdata-directory*. Attempting to set a language that is not available 
will raise an error."
  (let ((return-code (tessbaseapiinit3 api *tessdata-directory* lang)))
    (case return-code
      (-1 (error "Failure to initialize TessBaseAPI."))
      (0 t))))

(defun process-pages (api truename)
  "This function calls TessBaseAPIProcessPages on api, which should be an initialized
TessBaseAPI, and then uses Leptonica to load the image found at truename (which must be a 
string containing the complete path to the file). It then runs OCR on the image. On SBCL, 
the division-by-zero float trap is masked to prevent it from causing a non-recoverable error.

The details of your Leptonica installation will determine exactly what image formats this 
function can process successfully.

Returns T on success, otherwise signals error."
  (mask-sigfpe 
   (let ((return-code (tessbaseapiprocesspages api truename "" 0 (null-pointer))))
    (case return-code
      (1 t)
      (t (error "TessBaseAPIProcessPages returned failure."))))))

(defun get-utf8-text (api)
  "This function calls TessBaseAPIGetUTF8Text on api, which should be an initialized
TessBaseAPI with its image set. If called before another function such as PROCESS-PAGES has 
carried out OCR on the image, it will be carried out. On SBCL, the division-by-zero float 
trap is masked to prevent it from causing a non-recoverable error.

Returns a lisp string of the UTF-8 text produced by Tesseract."
  (mask-sigfpe (tessbaseapigetutf8text api)))

(defun get-hocr-text (api page)
  "This function calls TessBaseAPIGetHOCRText on api, which should be an initialized
TessBaseAPI with its image set. If called before another function such as PROCESS-PAGES has 
carried out OCR on the image, it will be carried out. On SBCL, the division-by-zero float 
trap is masked to prevent it from causing a non-recoverable error.

Returns a lisp string of the HOCR XML produced by Tesseract. This can be parsed using 
Common Lisp XML packages such as CLOSURE-XML and plump."
  (mask-sigfpe (tessbaseapigethocrtext api page)))

(defun image-to-text (filepath &key (lang "eng"))
  "Runs OCR on the file found at filepath for language lang (English by default). Returns 
text string."
  (with-base-api api
    (init-tess-api api lang)
    (process-pages api (namestring (truename filepath))) ; protected from SIGFPE on sbcl
    (tessbaseapigetutf8text api))) ; no need to mask float traps after process-pages

(defun image-to-hocr (filepath &key (lang "eng") (page 0))
  "Runs OCR on the file found at filepath for language lang (English by default). Returns 
HOCR xml string."
  (with-base-api api
    (init-tess-api api lang)
    (process-pages api (namestring (truename filepath))) ; protected from SIGFPE on sbcl
    (tessbaseapigethocrtext api page))) ; no need to mask float traps after process-pages